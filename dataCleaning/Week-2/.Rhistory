install.packages(c("jpeg","jsonlite","data.table","httr"))
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library("xlsx")
library(xlsx)
installed.packages()
install.packages("xlsxjars")
install.packages("xlsx")
library(xlsx)
install.packages(rJava)
install.packages("rJava")
library(xlsx)
library(rJava)
install.packages(rJava)
install.packages("rJava")
install.packages("rJava")
library(RMySQL)
hg19 <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
dbDisconnect(hg19)
hg19 <- dbConnect(MySQL(),user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19,"affyU133Plus2")
head(affyData, 5)
affyData <- dbReadTable(hg19,"affyU133Plus2")
hg19 <- dbConnect(MySQL(),user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
affyData <- dbReadTable(hg19,"affyU133Plus2")
head(affyData)
head(affyData,5)
head(affyData,5)
query<-dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
warnings()
affyMis <- fetch(query)
quantile(affyMis$MisMatches)
affySmall <- fetch(query, n=10)
affuSmall
affiSmall
affySmall
dbClearResult(query)
query<-dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
conn = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(conn)
close(conn)
htmlCode
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes = T)
xpathSApply(html, "//title", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
xpathSApply(html, "//title", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
a<-xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
a
html <- htmlTreeParse(url, useInternalNodes = T)
a<-xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
a
library(httr)
html2 = GET(url)
content2 = content(html, asText=TRUE)
content2 = content(html2, asText=TRUE)
install.packages("xml2")
myapp = oauth_app("twitter", key="6ukc2JnjkT3VhODXONNWrgpY3", secret="XZ4D8nFCX2KaOaxFhipq5Z1OB56aIuWoRDy4XS1Olx3rll2wx3")
sig = sign_oauth1.0(myapp, token = "164105862-utvINt0JcsHzpIqPMMKn7J3JDCqs2EXCcO4Fpomj", token_secret = "iHiQvn6ZlGSzLDTqITqvI9kfoP6TCoU4fKQ2zR7YbV9KU")
homeTL = GET("http://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1 = content(homeTL)
json2 = sjonLite::from JSON(toJSON(json1))
json2 = sjonLite::fromJSON(toJSON(json1))
library(jsonlite)
json2 = sjonLite::fromJSON(toJSON(json1))
json2 = sjonlite::fromJSON(toJSON(json1))
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json1
json2[1,1:5]
json2[1,1:7]
?connections
myapp <- oauth_app("github", key = "8665d9f5b137ff7901d0", secret = "bebbdd7b28195cff50370c927d47312e0e8b477b")
library(httr)
myapp <- oauth_app("github", key = "8665d9f5b137ff7901d0", secret = "bebbdd7b28195cff50370c927d47312e0e8b477b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
asas
aas
sa
sa
sa
sa
library(httr)
myapp <- oauth_app("github", key = "8665d9f5b137ff7901d0", secret = "bebbdd7b28195cff50370c927d47312e0e8b477b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(httr)
myapp <- oauth_app("github", key = "e655942d9abe820e466999d59dd08172906c29ff", secret = "bebbdd7b28195cff50370c927d47312e0e8b477b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", key = "8665d9f5b137ff7901d0", secret = "bebbdd7b28195cff50370c927d47312e0e8b477b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
class(req)
req
stop_for_status(req)
myapp <- oauth_app("github", key = "8665d9f5b137ff7901d0", secret = "bebbdd7b28195cff50370c927d47312e0e8b477b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
myapp <- oauth_app("Week-2_Quiz", key = "ef1c6aa085a4a813a7e7", secret = "979c85c9a4393097fa8d3e3b0f4255a21baa2b5e")
github_token <- oauth2.0_token(oauth_endpoints("Week-2_Quiz"), myapp)
oauth_endpoints("Week-2Quiz")
library(httr)
require(httpuv)
require(jsonlite)
install.packages(httpuv)
install.packages("httpuv")
library(httr)
require(httpuv)
require(jsonlite)
oauth_endpoints("Week-2_Quiz")
oauth_endpoints("github")
myapp <- oauth_app("quiz2", "ddb0d599de51ccd02f4b", secret = "6af1109f6ecf442d292425087d49bb13d9bbe9c8")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("Week-2_Quiz", "ef1c6aa085a4a813a7e7", secret = "979c85c9a4393097fa8d3e3b0f4255a21baa2b5e")
github_token <- oauth2.0_token(oauth_endpoints("Week-2_Quiz"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
contentDL <-content(req)
class(contentDL)
contentDL
length(contentDL)
contentDL
content2 <- jsonlite::fromJSON(toJSON(contentDL))
content2
install.packages(sqldf)
install.packages("sqldf")
?read.csv
library(data.table)
acs <- fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv')
names(acs)
dim(acs)
library(sqldf)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
q<-sqldf("select * from acs where AGEP < 50 and pwgtp1")
head(q)
s<-sqldf("select pwgtp1 from acs where AGEP < 50")
s
head(s)
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
c(sqldf("select distinct AGEP from acs"))
sqldf("select AGEP where unique from acs")
library(XML)
url = "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url,useInternalNodes=T)
html
?readLine
conn = url(url)
htmlCode = readLines
htmlCode = readLines(conn)
htmlCode
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
setwd("/home/gr8-balls-of-fire/datasciencecoursera/dataCleaning/Week-2")
read.fwf(getdata_Fwksst8110.for)
read.fwf(getdata_Fwksst8110.for, widths = 13)
read.fwf("getdata_Fwksst8110.for", widths = 13)
read.fwf("getdata_Fwksst8110.for", widths = 14,13,13,13,13)
a <- read.fwf("getdata_Fwksst8110.for",widths = c(9,4,3,4,3,4,3,4,3), sep" ")
a <- read.fwf("getdata_Fwksst8110.for",widths = c(9,4,3,4,3,4,3,4,3), sep = " ")
a <- read.fwf("getdata_Fwksst8110.for",widths = c(9,4,3,4,3,4,3,4,3), skip = 4)
a
ncol(a)
head(a)
readFOR <- read.fwf("getdata_Fwksst8110.for",widths = c(10,4,3,4,3,4,3,4,3), skip = 4)
head(readFOR)
ncol(readFOR)
readFOR <- read.fwf("getdata_Fwksst8110.for",widths = c(10,9,1), skip = 4)
head(readFOR)
readFOR <- read.fwf("getdata_Fwksst8110.for",widths = c(10,9,1,7,4,1), skip = 4)
head(readFOR)
readFOR <- read.fwf("getdata_Fwksst8110.for",widths = c(10,9,1,7,6,8), skip = 4)
head(readFOR)
readFOR <- read.fwf("getdata_Fwksst8110.for",widths = c(10,9,1,7,5,1,8), skip = 4)
head(readFOR)
readFOR <- read.fwf("getdata_Fwksst8110.for",widths = c(10,9,1,7,5,1,8,4,1), skip = 4)
head(readFOR)
readFOR <- read.fwf("getdata_Fwksst8110.for",widths = c(10,9,1,7,5,1,8,4,1,8,4,1,3), skip = 4)
head(readFOR)
readFin <- readFOR[,c(1,2,4,5,7,8,10,11,13)]
head(readFin)
colSums(readFin)
colSums(readFin, na.rm = TRUE)
V13 <- as.numeric(readFin[,readFin$V13])
V13 <- readFin[,readFin$V13]
class(V13)
V13 <- c(readFin[,readFin$V13])
class(V13)
v13
V13
head(V13)
head(V13, 3)
V13 <- readFin[,readFin$V13]
V13
names(readFin)
V13<- c(readFin[,9])
V13
class(V13)
sum(V13)
V13<- c(readFin[,4])
sum(V13)
